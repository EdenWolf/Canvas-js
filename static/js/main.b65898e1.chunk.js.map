{"version":3,"sources":["pages/Circles.js","pages/Gravity.js","App.js","reportWebVitals.js","index.js"],"names":["Circles","props","canvas","ctx","useWindowSize","width","height","mouse","x","undefined","y","circleArray","colorArray","Circle","dx","dy","radius","this","minRadius","color","Math","floor","random","length","draw","beginPath","arc","PI","fillStyle","fill","update","i","push","animate","requestAnimationFrame","clearRect","fillRect","useEffect","document","querySelector","getContext","onMouseMove","event","clientX","clientY","mouseMove","className","Gravity","ballArray","Ball","splice","onClick","mouseClick","onKeyPress","charCode","ind","keyDowm","tabIndex","App","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","to","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b65898e1.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\n\r\nexport default function Circles(props) {\r\n  let useWindowSize = props.useWindowSize;\r\n\r\n  const [width, height] = useWindowSize();\r\n  const maxRadius = 40;\r\n  const minRadius = 2;\r\n\r\n  let canvas;\r\n  let ctx;\r\n\r\n  let mouse = {\r\n    x: undefined,\r\n    y: undefined\r\n  }\r\n\r\n  let circleArray = [];\r\n  let colorArray = ['#006d77', '#83c5be', '#edf6f9', '#ffddd2', '#e29578'];\r\n\r\n  function Circle(x, y, dx, dy, radius) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.dx = dx;\r\n    this.dy = dy;\r\n    this.radius = radius;\r\n    this.minRadius = radius;\r\n    this.color = colorArray[Math.floor(Math.random() * colorArray.length)];\r\n\r\n    this.draw = function () {\r\n      ctx.beginPath();\r\n      ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\r\n      ctx.fillStyle = this.color;\r\n      ctx.fill();\r\n    }\r\n\r\n    this.update = function () {\r\n      this.x += this.dx;\r\n      this.y += this.dy;\r\n\r\n      if (this.x <= this.radius || this.x >= width - this.radius) {\r\n        this.dx *= -1;\r\n      }\r\n      if (this.y <= this.radius || this.y >= height - this.radius) {\r\n        this.dy *= -1;\r\n      }\r\n\r\n      if (mouse.x - this.x < 50 && mouse.x - this.x > -50 && mouse.y - this.y < 50 && mouse.y - this.y > -50) {\r\n        if (this.radius < maxRadius) {\r\n          this.radius += 2;\r\n        }\r\n      }\r\n      else if (this.radius > this.minRadius) {\r\n        this.radius -= 2;\r\n      }\r\n\r\n      this.draw();\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < width * height / 1000; i++) {\r\n    const speed = 3;\r\n    let radius = Math.random() * minRadius + minRadius;\r\n    let x = Math.random() * (width - radius * 2) + radius;\r\n    let y = Math.random() * (height - radius * 2) + radius;\r\n    let dx = (Math.random() - 0.5);\r\n    let dy = (dx >= 0 ? 0.5 - dx : -0.5 - dx) * speed;\r\n    dx *= speed;\r\n\r\n    circleArray.push(new Circle(x, y, dx, dy, radius));\r\n  }\r\n\r\n  function animate() {\r\n    requestAnimationFrame(animate);\r\n    ctx.clearRect(0, 0, width, height);\r\n    ctx.fillStyle = \"#00171a\";\r\n    ctx.fillRect(0, 0, width, height);\r\n\r\n    for (let i = 0; i < circleArray.length; i++) {\r\n      circleArray[i].update();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!canvas) {\r\n      canvas = document.querySelector(\"canvas\");\r\n      ctx = canvas.getContext('2d');\r\n    }\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    animate();\r\n    return () => {\r\n      circleArray = [];\r\n    }\r\n  }, [width, height]);\r\n\r\n  const mouseMove = event => {\r\n    mouse.x = event.clientX;\r\n    mouse.y = event.clientY;\r\n  }\r\n\r\n  return (\r\n    <div onMouseMove={event => mouseMove(event)}>\r\n      <canvas className=\"circlesCanvas\"></canvas>\r\n    </div>\r\n  );\r\n}","import { useEffect } from 'react';\r\n\r\nexport default function Gravity(props) {\r\n    let useWindowSize = props.useWindowSize;\r\n\r\n    const [width, height] = useWindowSize();\r\n    const maxRadius = 40;\r\n    const minRadius = 20;\r\n\r\n    let canvas;\r\n    let ctx;\r\n\r\n    let ballArray = [];\r\n    let colorArray = ['#006d77', '#83c5be', '#edf6f9', '#ffddd2', '#e29578'];\r\n\r\n    function Ball(x, y, dx, dy, radius) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.dy = dy;\r\n        this.dx = dx;\r\n        this.radius = radius;\r\n        this.color = colorArray[Math.floor(Math.random() * colorArray.length)];\r\n\r\n        this.draw = function () {\r\n            ctx.beginPath();\r\n            ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\r\n            ctx.fillStyle = this.color;\r\n            ctx.fill();\r\n        }\r\n\r\n        this.update = function () {\r\n            if (this.x <= this.radius || this.x >= width - this.radius) {\r\n                this.dx *= -1;\r\n            }\r\n            if (this.y + this.radius + this.dy >= height) {\r\n                this.dy = -this.dy * 0.9;\r\n                this.dx *= 0.9;\r\n            }\r\n            else {\r\n                this.dy++;\r\n            }\r\n            this.y += this.dy;\r\n            this.x += this.dx;\r\n\r\n            this.draw();\r\n        }\r\n    }\r\n\r\n    function animate() {\r\n        requestAnimationFrame(animate);\r\n        ctx.clearRect(0, 0, width, height);\r\n        ctx.fillStyle = \"#00171a\";\r\n        ctx.fillRect(0, 0, width, height);\r\n\r\n        for (let i = 0; i < ballArray.length; i++) {\r\n            if (ballArray[i].y >= height - ballArray[i].radius && ballArray[i].dy <= 5 && ballArray[i].dy >= -5) {\r\n                ballArray.splice(i, 1);\r\n                continue;\r\n            }\r\n            ballArray[i].update();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!canvas) {\r\n            canvas = document.querySelector(\"canvas\");\r\n            ctx = canvas.getContext('2d');\r\n        }\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n\r\n        animate();\r\n        return () => {\r\n            ballArray = [];\r\n        }\r\n    }, [width, height]);\r\n\r\n    const mouseClick = event => {\r\n        let dx = (Math.random() - 0.5) * 20;\r\n        let dy = (Math.random() - 1) * 20;\r\n        let radius = Math.random() * minRadius + maxRadius - minRadius;\r\n        ballArray.push(new Ball(event.clientX, event.clientY, dx, dy, radius));\r\n    }\r\n\r\n    const keyDowm = event => {\r\n        if (event.charCode === 32) {\r\n            for (let ind = 0; ind <= 100; ind++) {\r\n                let radius = Math.random() * minRadius + maxRadius - minRadius;\r\n                let x = Math.random() * (width - radius * 2) + radius;\r\n                let y = Math.random() * (height - radius * 2) + radius;\r\n                let dx = (Math.random() - 0.5) * 20;\r\n                let dy = (Math.random() - 1) * 20;\r\n                ballArray.push(new Ball(x, y, dx, dy, radius));\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div onClick={event => mouseClick(event)} onKeyPress={event => keyDowm(event)} tabIndex=\"0\">\r\n            <canvas className=\"gravityCanvas\"></canvas>\r\n        </div>\r\n    );\r\n}","import './App.css';\r\nimport Circles from './pages/Circles';\r\nimport Gravity from './pages/Gravity';\r\nimport { Route, BrowserRouter as Router, Switch, Link } from \"react-router-dom\";\r\nimport { useState, useLayoutEffect } from 'react';\r\n\r\n\r\nfunction App() {\r\n  function useWindowSize() {\r\n    const [size, setSize] = useState([0, 0]);\r\n    useLayoutEffect(() => {\r\n      function updateSize() {\r\n        setSize([window.innerWidth, window.innerHeight]);\r\n      }\r\n      window.addEventListener('resize', updateSize);\r\n      updateSize();\r\n      return () => window.removeEventListener('resize', updateSize);\r\n    }, []);\r\n    return size;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <div className=\"container\">\r\n          <nav>\r\n            <ul>\r\n              <li><Link to=\"/Circles\">Circles</Link></li>\r\n              <li><Link to=\"/Gravity\">Gravity</Link></li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n        <Switch>\r\n\r\n          <Route path=\"/Circles\" component={() => <Circles useWindowSize={useWindowSize} />} />\r\n          <Route path=\"/Gravity\" component={() => <Gravity useWindowSize={useWindowSize} />} />\r\n          <Route path=\"/\" component={() => <Circles useWindowSize={useWindowSize} />} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}