{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","canvas","ctx","canvasRef","useRef","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","width","height","mouse","x","undefined","y","Circle","dx","dy","radius","this","minRadius","color","colorArray","Math","floor","random","length","draw","beginPath","arc","PI","fillStyle","fill","update","circleArray","i","push","animate","requestAnimationFrame","clearRect","useEffect","current","getContext","className","onMouseMove","event","clientX","clientY","mouseMove","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.512fe6d7.chunk.js","sourcesContent":["import './App.css';\nimport { useEffect, useState, useRef, useLayoutEffect } from 'react';\n\nfunction useWindowSize() {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight-4]);\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size;\n}\n\nfunction App() {\n  const canvasRef = useRef(null);\n  const [width, height] = useWindowSize();\n  const maxRadius = 40;\n  const minRadius = 2;\n\n  var canvas;\n  var ctx;\n\n  var mouse = {\n    x: undefined,\n    y: undefined\n  }\n\n  function Circle(x, y, dx, dy, radius) {\n    this.x = x;\n    this.y = y;\n    this.dx = dx;\n    this.dy = dy;\n    this.radius = radius;\n    this.minRadius = radius;\n    this.color = colorArray[Math.floor(Math.random() * colorArray.length)];\n\n    this.draw = function() {\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n      ctx.fillStyle = this.color;\n      ctx.fill();\n    }\n\n    this.update = function() {\n      this.x += this.dx;\n      this.y += this.dy;\n\n      if (this.x <= this.radius || this.x >= width - this.radius) {\n        this.dx *= -1;\n      }\n      if (this.y <= this.radius || this.y >= height - this.radius) {\n        this.dy *= -1;\n      }\n\n      if (mouse.x - this.x < 50 && mouse.x - this.x > -50 && mouse.y - this.y < 50 && mouse.y - this.y > -50) {\n        if (this.radius < maxRadius) {\n          this.radius += 2;\n        }\n      }\n      else if (this.radius > this.minRadius) {\n        this.radius -= 2;\n      }\n\n      this.draw();\n    }\n  }\n\n  var circleArray = [];\n  var colorArray = ['#006d77', '#83c5be', '#edf6f9', '#ffddd2', '#e29578'];\n\n  for(var i = 0; i < width * height / 1000; i++) {\n    const speed = 3;\n    var radius = Math.random() * minRadius + minRadius;\n    var x = Math.random() * (width - radius * 2) + radius;\n    var y = Math.random() * (height - radius * 2) + radius;\n    var dx = (Math.random() - 0.5);\n    var dy = (dx >= 0 ? 0.5 - dx : 0.5 + dx) * speed;\n    dx *= speed;\n\n    circleArray.push(new Circle(x, y, dx, dy ,radius));\n  }\n\n  function animate() {\n    requestAnimationFrame(animate);\n    ctx.clearRect(0, 0, width, height);\n\n    for(var i = 0; i < circleArray.length; i++) {\n      circleArray[i].update();\n    }\n  }\n\n  useEffect(() => {\n    canvas = canvasRef.current;\n    canvas.width = width;\n    canvas.height = height;\n    ctx = canvas.getContext('2d');\n\n    const render = () => {\n      animate(ctx);\n    }\n    render();\n\n  }, [width, height]);\n\n  const mouseMove = event => {\n    mouse.x = event.clientX;\n    mouse.y = event.clientY;\n  }\n\n  return (\n    <div className=\"App\" onMouseMove={event => mouseMove(event)}>\n      <canvas ref={canvasRef}></canvas>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}