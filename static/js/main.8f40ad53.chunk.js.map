{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","canvas","ctx","canvasRef","useRef","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","width","height","Circle","x","y","dx","dy","radius","this","draw","beginPath","arc","Math","PI","strokeStyle","stroke","fill","update","circleArray","i","random","push","animate","requestAnimationFrame","clearRect","length","useEffect","current","getContext","className","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAgGeA,MAhFf,WACE,IAGIC,EACAC,EAJEC,EAAYC,iBAAO,MACzB,EAfF,WACE,MAAwBC,mBAAS,CAAC,EAAG,IAArC,mBAAOC,EAAP,KAAaC,EAAb,KASA,OARAC,2BAAgB,WACd,SAASC,IACPF,EAAQ,CAACG,OAAOC,WAAYD,OAAOE,YAAY,IAIjD,OAFAF,OAAOG,iBAAiB,SAAUJ,GAClCA,IACO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACjD,IACIH,EAKiBS,GAAxB,mBAAOC,EAAP,KAAcC,EAAd,KAKA,SAASC,EAAOC,EAAGC,EAAGC,EAAIC,EAAIC,GAC5BC,KAAKL,EAAIA,EACTK,KAAKJ,EAAIA,EACTI,KAAKH,GAAKA,EACVG,KAAKF,GAAKA,EACVE,KAAKD,OAASA,EAEdC,KAAKC,KAAO,WACVvB,EAAIwB,YACJxB,EAAIyB,IAAIH,KAAKL,EAAGK,KAAKJ,EAAGI,KAAKD,OAAQ,EAAa,EAAVK,KAAKC,IAAQ,GACrD3B,EAAI4B,YAAc,OAClB5B,EAAI6B,SACJ7B,EAAI8B,QAGNR,KAAKS,OAAS,WACZT,KAAKL,GAAKK,KAAKH,GACfG,KAAKJ,GAAKI,KAAKF,IAEXE,KAAKL,GAAKK,KAAKD,QAAUC,KAAKL,GAAKH,EAAQQ,KAAKD,UAClDC,KAAKH,KAAO,IAEVG,KAAKJ,GAAKI,KAAKD,QAAUC,KAAKJ,GAAKH,EAASO,KAAKD,UACnDC,KAAKF,KAAO,GAGdE,KAAKC,QAMT,IAFA,IAAIS,EAAc,GAEVC,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC3B,IAEIhB,EAAIS,KAAKQ,UAAYpB,EAAQO,IAFlB,GAGXH,EAAIQ,KAAKQ,UAAYnB,EAASM,IAHnB,GAIXF,EAAMO,KAAKQ,SAAW,GACtBd,EAJU,IAIJD,GAAM,EAAI,GAAMA,EAAK,GAAMA,GACrCA,GALc,GAOda,EAAYG,KAAK,IAAInB,EAAOC,EAAGC,EAAGC,EAAIC,EARvB,KAWjB,SAASgB,IACPC,sBAAsBD,GACtBpC,EAAIsC,UAAU,EAAG,EAAGxB,EAAOC,GAE3B,IAAI,IAAIkB,EAAI,EAAGA,EAAID,EAAYO,OAAQN,IACrCD,EAAYC,GAAGF,SAiBnB,OAbAS,qBAAU,YACRzC,EAASE,EAAUwC,SACZ3B,MAAQA,EACff,EAAOgB,OAASA,EAChBf,EAAMD,EAAO2C,WAAW,MAGtBN,MAID,CAACtB,EAAOC,IAGT,qBAAK4B,UAAU,MAAf,SACE,wBAAQC,IAAK3C,OC/EJ4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.8f40ad53.chunk.js","sourcesContent":["import './App.css';\nimport { useEffect, useState, useRef, useLayoutEffect } from 'react';\n\nfunction useWindowSize() {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight-4]);\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size;\n}\n\nfunction App() {\n  const canvasRef = useRef(null);\n  const [width, height] = useWindowSize();\n\n  var canvas;\n  var ctx;\n\n  function Circle(x, y, dx, dy, radius) {\n    this.x = x;\n    this.y = y;\n    this.dx = dx;\n    this.dy = dy;\n    this.radius = radius;\n\n    this.draw = function() {\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n      ctx.strokeStyle = \"blue\";\n      ctx.stroke();\n      ctx.fill();\n    }\n\n    this.update = function() {\n      this.x += this.dx;\n      this.y += this.dy;\n\n      if (this.x <= this.radius || this.x >= width - this.radius) {\n        this.dx *= -1;\n      }\n      if (this.y <= this.radius || this.y >= height - this.radius) {\n        this.dy *= -1;\n      }\n\n      this.draw();\n    }\n  }\n\n  var circleArray = [];\n\n  for(var i = 0; i < 100; i++) {\n    const radius = 30;\n    const speed = 10;\n    var x = Math.random() * (width - radius * 2) + radius;\n    var y = Math.random() * (height - radius * 2) + radius;\n    var dx = (Math.random() - 0.5);\n    var dy = (dx >= 0 ? 0.5 - dx : 0.5 + dx) * speed;\n    dx *= speed;\n\n    circleArray.push(new Circle(x, y, dx, dy ,radius));\n  }\n\n  function animate() {\n    requestAnimationFrame(animate);\n    ctx.clearRect(0, 0, width, height);\n\n    for(var i = 0; i < circleArray.length; i++) {\n      circleArray[i].update();\n    }\n  }\n\n  useEffect(() => {\n    canvas = canvasRef.current;\n    canvas.width = width;\n    canvas.height = height;\n    ctx = canvas.getContext('2d');\n\n    const render = () => {\n      animate(ctx);\n    }\n    render();\n\n  }, [width, height]);\n\n  return (\n    <div className=\"App\">\n      <canvas ref={canvasRef}></canvas>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}